<?php

namespace App\Http\Controllers;

use Illuminate\Support\Facades\Cache;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;

class ApiController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        Log::info('Êó•Âøó',$request->all());

        return 'ok';
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function wxuser()
    {
        Cache::forget('users');//Âà†Èô§ÁºìÂ≠òÊï∞ÊçÆ

        $data = file_get_contents('http://127.0.0.1:3000/openwx/get_friend_info');
//        echo($data);
//        return $data;
        $arr = json_decode($data,true);
        $url = 'http://127.0.0.1:3000/openwx/send_friend_message';
        foreach ($arr as $user)
        {
            if ($user['category'] =='Â•ΩÂèã'){
                $user['state'] = 0;
                $users[] = $user;
            }
        }

        Cache::forever('users',$users);
        $value = Cache::get('users');
        echo '<pre>';
        var_dump($value);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show()
    {
//        $data = file_get_contents('http://127.0.0.1:3000/openwx/get_friend_info');
////        echo($data);
////        return $data;
//        $arr = json_decode($data,true);
        $url = 'http://127.0.0.1:3000/openwx/send_friend_message';
        $value = Cache::get('users');
        foreach ($value as $wx)
        {
//            dd($wx['name']);
            if ($wx['category'] =='Â•ΩÂèã' || $wx['state'] ==0){
//                echo($wx['id']);
//                echo '<br>';
                $post_data = [
                    'content'=>'[Áôº][Áôº][Áôº][Áôº]  ‰ªäÂ§©ÊòØÂ§ßÂπ¥‰∏âÂçÅ‰∫Ü ÔºåÁ•ùÁ¶èÊúãÂèãÔºÅüéÄüéÄÊñ∞Âπ¥Âø´‰πêüéÄüéÄ ÂºÄÂºÄÂøÉÂøÉ[ËÄ∂][ËÄ∂][ËÄ∂][ËÄ∂]  ÊÑüÊÅ©Â§ßÂÆ∂‰∏ÄÁõ¥‰ª•Êù•ÁöÑÊîØÊåÅüòÅ
‚îè‚ïÆ/‚ï±¬∏.‚Ä¢*""*‚Ä¢.¬∏
  üíõ    Êñ∞Âπ¥‰∫ã‰∫ãÈ°∫Âà©üíõ
‚ï±/‚ï∞‚îõ¬∏.Êñ∞Âπ¥Â§©Â§©ÔºåÂ•ΩÂøÉÊÉÖüíõ          
‚úøÁ•ùÁ¶èÊúãÂèã‰ª¨üëâ‚ú™‚úø
‚îä„ÄÄ ‚îä„ÄÄ ‚îä  ÈñãÂøÉÈ†ÜÂà©¬∏.‚Ä¢*¬®`*‚Ä¢üê≥
‚îä„ÄÄ ‚îä„ÄÄÂ•ΩÈÅãÈÄ£ÈÄ£¬∏.‚Ä¢*¬®`*‚Ä¢ üê≥
‚îä„ÄÄÂπ∏Á¶èÊªøÊªø¬∏.‚Ä¢*¬®`*‚Ä¢ üê≥ 
ÈóîÂÆ∂ÂÆâÂ∫∑¬∏.‚Ä¢*¬®`*‚Ä¢üê≥
__ *üêº*üêº*ÁúüÊëØ*üêº*üêº*
_*üêº****üêºÈ°òÊÇ®üêº****üêº*
*üêº*_ÂêâÁ••_*‚≠ê*_ Â¶ÇÊÑè_*üêº*
*üêº* ___ Âπ≥ÂÆâ  ÂÅ•Â∫∑  ___*üêº*
_*üêº*__  È†ÜÂøÉ ÊÑâÊÇÖ __ *üêº*
__ *üêº*Âπ∏Á¶è  __ ÁæéÊªø*üêº*
__ ___*üêº*Â•ΩÈÅãÂà∞*üêº*
________*üêº*   *üêº*
   Á•ùÁ¶èÊÇ®ÂèäÂÆ∂‰∫∫*üêº*  üçÄüå∫üçí*¬Ø`‚Ä¢.¬∏‚ú≤‚òÜ 
‚îä„ÄÄ‚îä‚òÜÊ∑°Ê∑°ÁöÑÁâΩÊéõüçí*¬Ø`‚Ä¢‚ú≤‚òÜ
‚îä„ÄÄ‚îä‚òÜÊ∑±Ê∑±ÁöÑÁ•ùÁ¶èüçí*¬Ø`‚ú≤‚òÜ
‚îä„ÄÄ‚îä‚òÜÊ∑∫Ê∑∫ÁöÑÂæÆÁ¨ëüçí*.‚ú≤‚òÜ*
‚îä„ÄÄ‚îä‚òÜÊªøÊªøÁöÑÂñúÊÇÖüçí‚òÜ *
‚îä„ÄÄ‚îä„ÄÄ‚îä„ÄÄ‚îä„ÄÄüíõ
‚îä„ÄÄ‚îä„ÄÄ‚îä„ÄÄüíõ  
‚îä„ÄÄ‚îä„ÄÄüíõ
‚îä„ÄÄüíõ
üíõË¥¢ËøêÊªöÊªöÊù•„ÄÇüéâüéâüéâüéâ',
                    'id'=>$wx['id'],
                    ];
                $this->curlGet($url, 'post', $post_data);
            }
//            echo $wx['name'];
            sleep(10);
        }
//ËæìÂá∫
        echo '<pre>';
//        dd($arr);

    }


    /**
     * @param $url
     * @param $method
     * @param int $post_data
     * @return mixed
     */
    public function curlGet($url,$method,$post_data = 0){
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        if ($method == 'post') {
            curl_setopt($ch, CURLOPT_POST, 1);

            curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
        }elseif($method == 'get'){
            curl_setopt($ch, CURLOPT_HEADER, 0);
        }
        $output = curl_exec($ch);
        curl_close($ch);
        return $output;
    }


    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
